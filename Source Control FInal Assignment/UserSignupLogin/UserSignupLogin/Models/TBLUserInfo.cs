 //------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UserSignupLogin.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;

    public partial class TBLUserInfo
    {
        [DisplayName("ID")]
        public int IdUs { get; set; }


        [System.ComponentModel.DisplayName("Name")]
        [Required(ErrorMessage = "Name is Required")]
        [StringLength(50, MinimumLength = 3, ErrorMessage = "Mininum 3 letters and max 50 letters")]
        public string NameUs { get; set; }
        [DisplayName("Gender")]
        [Required(ErrorMessage = "Gender is Required")]
        public string GenderUs { get; set; }

        [DisplayName("Age")]
        [Required(ErrorMessage = "Age is Required")]
        [Range(1, 110, ErrorMessage = "Age must be between 1-110 in years.")]
        public int AgeUs { get; set; }

        [DisplayName("Password")]
       
        [Required(ErrorMessage = "Password is Required")]
        [DataType(DataType.Password)]
        public string PasswordUs { get; set; }

        [DisplayName("Confirm Password")]
        [Required(ErrorMessage = "Confirm Password is Required")]
        [Compare("PasswordUs", ErrorMessage = "Both password do not matched")]
        [DataType(DataType.Password)]
        [NotMapped]
        public string ConfirmPasswordUs { get; set; }


        [RegularExpression("^([0-9a-zA-Z]([-\\.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$", ErrorMessage = "Invalid Email Format")]
        [Required(ErrorMessage = "Email ID is Required")]
        [DataType(DataType.EmailAddress)]
        [MaxLength(50)]
        [DisplayName("Email Address")]
        public string EmailUs { get; set; }


        [DisplayName("Credit Card")]
       
        public long CreditCardUs { get; set; }


        


        [DisplayName("Mobile Number")]
        [DataType(DataType.PhoneNumber)]
        [RegularExpression(@"^\(?([0-9]{2})[-. ]?([0-9]{4})[-. ]?([0-9]{3})[-. ]?([0-9]{3})$", ErrorMessage = "Not a valid Phone number")]
        public long Phone { get; set; }


        [DisplayName("File")]
        
        public string FileUs { get; set; }
    }
}
