//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
<<<<<<< HEAD

namespace Assignment1_session_control.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;

=======
using System.Web;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using Assignment1_session_control.CustomValidation;

namespace Assignment1_session_control.Models
{
>>>>>>> de95fd29ca2ec2aa6fd23acd4aca826fbe76b158

    public partial class t1
    {

        public int Id { get; set; }


        [DisplayName("Name")]
        [Required(ErrorMessage = "Name is Required")]
        [StringLength(50, MinimumLength = 3, ErrorMessage ="Mininum 3 letters and max 50 letters")]
        public string Name { get; set; }


        [DisplayName("Gender")]
<<<<<<< HEAD
        [Required(ErrorMessage = "Gender is Required")]
=======
>>>>>>> de95fd29ca2ec2aa6fd23acd4aca826fbe76b158
        public string Gender { get; set; }



        [DisplayName("Age")]
        [Required(ErrorMessage = "Age is Required")]
        [Range(1, 110, ErrorMessage = "Age must be between 1-110 in years.")]
        
        public int Age { get; set; }

        
        [DisplayName("Password")]
        [Required(ErrorMessage = "Password is Required")]
        [DataType(DataType.Password)]
        public string Password { get; set; }


        [DisplayName("Confirm Password")]
        [Required(ErrorMessage = "Confirm Password is Required")]
        [Compare("Password", ErrorMessage ="Both password do not matched")]
        [DataType(DataType.Password)]
        public string Confirm_password { get; set; }


        [RegularExpression("^([0-9a-zA-Z]([-\\.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$", ErrorMessage ="Invalid Email Format")]
        [Required(ErrorMessage = "Email ID is Required")]
        [DataType(DataType.EmailAddress)]
        [MaxLength(50)]
        [DisplayName("Email Address")]
        
        public string Email { get; set; }

        [DisplayName("Credit Card")]
<<<<<<< HEAD
        [DataType(DataType.CreditCard)]
=======
        
>>>>>>> de95fd29ca2ec2aa6fd23acd4aca826fbe76b158
        public long Credit_card { get; set; }


        [DisplayName("File")]
        
<<<<<<< HEAD
        public string Filename { get; set; }
=======
        [FileExtensions(ErrorMessage ="Select Image Only", Extensions ="jpg,png,jpeg,gif")]
        [MyFileExtension(ErrorMessage ="Select Image only", AllowedExtensions ="jpg,png,jpeg,gif")]
        public HttpPostedFileBase Filename { get; set; }

       
>>>>>>> de95fd29ca2ec2aa6fd23acd4aca826fbe76b158


        [DisplayName("Mobile Number")]
        [DataType(DataType.PhoneNumber)]
        [RegularExpression(@"^\(?([0-9]{2})[-. ]?([0-9]{4})[-. ]?([0-9]{3})[-. ]?([0-9]{3})$", ErrorMessage = "Not a valid Phone number")]
        public long Phone_number { get; set; }
    }
}
